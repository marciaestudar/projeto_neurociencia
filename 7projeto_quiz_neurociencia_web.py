# -*- coding: utf-8 -*-
"""7projeto_quiz_neurociencia_web.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RJJrms3Wvc5bEGpoEDj0n6FnugzAWW9p
"""

import streamlit as st
import random

# --- Estrutura de dados para as perguntas ---
# ********************************************************************************
# *** IMPORTANTE: VOC√ä PRECISA COLAR AQUI TODAS AS 140 PERGUNTAS GERADAS ***
# ********************************************************************************

# CUIDADO: Estas listas ser√£o carregadas e embaralhadas APENAS UMA VEZ
# quando o script √© executado pelo Streamlit (na primeira vez ou ap√≥s uma mudan√ßa no c√≥digo).
# Elas representam o banco completo de perguntas, que ser√° ciclicamente consumido.
all_questions_raw = [
    {
        "category": "Neuroanatomia",
        "question": "O sistema nervoso central (SNC) √© composto por quais duas estruturas principais?",
        "options": [
            "C√©rebro e nervos cranianos.",
            "Medula espinhal e nervos perif√©ricos.",
            "Enc√©falo e medula espinhal.",
            "Sistema nervoso aut√¥nomo e sistema nervoso som√°tico."
        ],
        "correct_answer": "Enc√©falo e medula espinhal.",
        "explanation": "O SNC √© formado pelo enc√©falo (c√©rebro, cerebelo e tronco encef√°lico) e pela medula espinhal, que processam e integram informa√ß√µes.",
        "reference": "`Neuroanatomia na pr√°tica.pdf` (p. 15), `No√ß√µes-de-neuroanatomia-e-neurofisiologia-Elisabete-Castelon-Konkiewitz-‚Äì-Neuroci√™ncias-em-Debate.pdf` (p. 2), `Introducao_a_neuroanatomia_e_a_neurofisiologia.pdf` (p. 5)"
    },
    {
        "category": "Neurofisiologia",
        "question": "A principal fun√ß√£o do neur√¥nio √©:",
        "options": [
            "Fornecer suporte f√≠sico ao tecido nervoso.",
            "Conduzir impulsos el√©tricos e qu√≠micos (sinais nervosos).",
            "Produzir l√≠quido cefalorraquidiano.",
            "Defender o sistema nervoso contra pat√≥genos."
        ],
        "correct_answer": "Conduzir impulsos el√©tricos e qu√≠micos (sinais nervosos).",
        "explanation": "Neur√¥nios s√£o as unidades funcionais do sistema nervoso, especializadas em transmitir informa√ß√µes atrav√©s de sinais el√©tricos e qu√≠micos.",
        "reference": "`neuronios.pdf` (p. 8), `No√ß√µes-de-neuroanatomia-e-neurofisiologia-Elisabete-Castelon-Konkiewitz-‚Äì-Neuroci√™ncias-em-Debate.pdf` (p. 1)"
    },
    # --- COLE AS OUTRAS 138 PERGUNTAS AQUI ---
    # Certifique-se de que cada pergunta √© um dicion√°rio e que eles est√£o separados por v√≠rgulas.
    # Exemplo das √∫ltimas perguntas para completar o total:
    {
        "category": "Neuroanatomia",
        "question": "Qual √© o nome da estrutura que separa os dois lobos parietais um do outro na linha m√©dia superior do c√©rebro?",
        "options": [
            "Sulco lateral.",
            "Fissura longitudinal.",
            "Sulco central.",
            "Sulco parieto-occipital."
        ],
        "correct_answer": "Fissura longitudinal.",
        "explanation": "A fissura longitudinal √© a profunda invagina√ß√£o que divide o c√©rebro em seus dois hemisf√©rios (direito e esquerdo), consequentemente separando os lobos parietais um do outro na linha m√©dia superior.",
        "reference": "`Neuroanatomia na pr√°tica.pdf` (p. 16, figura 1.2)"
    },
    {
        "category": "Neurofisiologia",
        "question": "O que acontece com os canais de pot√°ssio dependentes de voltagem durante a fase de repolariza√ß√£o do potencial de a√ß√£o?",
        "options": [
            "Eles se fecham rapidamente.",
            "Eles se abrem, permitindo o efluxo de K+ para fora da c√©lula.",
            "Eles permitem o influxo de Na+.",
            "Eles s√£o inativados."
        ],
        "correct_answer": "Eles se abrem, permitindo o efluxo de K+ para fora da c√©lula.",
        "explanation": "Durante a repolariza√ß√£o, os canais de pot√°ssio dependentes de voltagem se abrem (lentamente), permitindo que os √≠ons pot√°ssio saiam da c√©lula. Isso faz com que o potencial de membrana retorne a valores negativos.",
        "reference": "`neuronios.pdf` (p. 29-30), `Introducao_a_neuroanatomia_e_a_neurofisiologia.pdf` (p. 4)"
    },
    {
        "category": "Neuroanatomia",
        "question": "Qual √© a principal fun√ß√£o dos corpos mamilares, que s√£o parte do hipot√°lamo?",
        "options": [
            "Regula√ß√£o da temperatura.",
            "Participa√ß√£o no circuito da mem√≥ria e reconhecimento de mem√≥ria.",
            "Controle da fome e da sede.",
            "Processamento de informa√ß√µes visuais."
        ],
        "correct_answer": "Participa√ß√£o no circuito da mem√≥ria e reconhecimento de mem√≥ria.",
        "explanation": "Os corpos mamilares, localizados na base do hipot√°lamo, s√£o componentes importantes do circuito de Papez e est√£o envolvidos em processos de mem√≥ria, especialmente na recupera√ß√£o de mem√≥rias declarativas.",
        "reference": "`Neuroanatomia na pr√°tica.pdf` (p. 15, implica√ß√µes funcionais)"
    },
    {
        "category": "Neuroanatomia",
        "question": "A Barreira Hematoencef√°lica (BHE) √© uma estrutura crucial para proteger o SNC. Ela √© formada principalmente por capilares com jun√ß√µes apertadas e processos dos:",
        "options": [
            "Micr√≥glias.",
            "Oligodendr√≥citos.",
            "Astr√≥citos.",
            "C√©lulas de Schwann."
        ],
        "correct_answer": "Astr√≥citos.",
        "explanation": "Os astr√≥citos desempenham um papel fundamental na forma√ß√£o e manuten√ß√£o da barreira hematoencef√°lica, que regula a passagem de subst√¢ncias do sangue para o tecido cerebral.",
        "reference": "`Introducao_a_neuroanatomia_e_a_neurofisiologia.pdf` (p. 2-3)"
    },
    {
        "category": "Neuroanatomia",
        "question": "Qual das seguintes estruturas N√ÉO faz parte do tronco encef√°lico?",
        "options": [
            "Mesenc√©falo.",
            "Ponte.",
            "T√°lamo.",
            "Bulbo."
        ],
        "correct_answer": "T√°lamo.",
        "explanation": "O tronco encef√°lico √© composto pelo mesenc√©falo, ponte e bulbo. O t√°lamo faz parte do dienc√©falo.",
        "reference": "`Neuroanatomia na pr√°tica.pdf` (p. 15), `No√ß√µes-de-neuroanatomia-e-neurofisiologia-Elisabete-Castelon-Konkiewitz-‚Äì-Neuroci√™ncias-em-Debate.pdf` (p. 4)"
    },
    {
        "category": "Neuroanatomia",
        "question": "A √°rea de Broca, crucial para a produ√ß√£o da fala e linguagem, est√° localizada em qual lobo cerebral?",
        "options": [
            "Lobo Temporal.",
            "Lobo Parietal.",
            "Lobo Frontal.",
            "Lobo Occipital."
        ],
        "correct_answer": "Lobo Frontal.",
        "explanation": "A √°rea de Broca est√° classicamente localizada no lobo frontal do hemisf√©rio dominante (geralmente o esquerdo) e √© essencial para a produ√ß√£o da linguagem (fala e escrita).",
        "reference": "`No√ß√µes-de-neuroanatomia-e-neurofisiologia-Elisabete-Castelon-Konkiewitz-‚Äì-Neuroci√™ncias-em-Debate.pdf` (p. 3), `Introducao_a_neuroanatomia_e_a_neurofisiologia.pdf` (p. 6)"
    },
    {
        "category": "Neuroanatomia",
        "question": "Qual √© o nome da estrutura que √© o ponto de decussa√ß√£o (cruzamento) dos nervos √≥pticos, onde parte das fibras de cada olho cruza para o lado oposto do c√©rebro?",
        "options": [
            "T√°lamo.",
            "Col√≠culo superior.",
            "Quiasma √≥ptico.",
            "Corpo geniculado lateral."
        ],
        "correct_answer": "Quiasma √≥ptico.",
        "explanation": "O quiasma √≥ptico √© o ponto na base do c√©rebro onde as fibras do nervo √≥ptico de cada olho se cruzam parcialmente, garantindo que as informa√ß√µes do campo visual esquerdo de ambos os olhos v√£o para o lado direito do c√©rebro, e vice-versa.",
        "reference": "`No√ß√µes-de-neuroanatomia-e-neurofisiologia-Elisabete-Castelon-Konkiewitz-‚Äì-Neuroci√™ncias-em-Debate.pdf` (p. 5)"
    }
]

# Separa as perguntas por categoria para uso inicial e recarga
_all_neuroanatomy_questions = [q for q in all_questions_raw if q["category"] == "Neuroanatomia"]
_all_neurophysiology_questions = [q for q in all_questions_raw if q["category"] == "Neurofisiologia"]

# Embaralha as listas uma √∫nica vez ao carregar o script
random.shuffle(_all_neuroanatomy_questions)
random.shuffle(_all_neurophysiology_questions)


# --- Configura√ß√£o do Streamlit ---
st.set_page_config(layout="centered", page_title="Quiz de Neuroci√™ncias")

st.title("üß† Quiz Interativo de Neuroci√™ncias")
st.markdown("Teste seus conhecimentos em Neuroanatomia e Neurofisiologia!")

# --- Inicializa√ß√£o de estados de sess√£o ---
if 'quiz_started' not in st.session_state:
    st.session_state.quiz_started = False
if 'current_question_index' not in st.session_state:
    st.session_state.current_question_index = 0
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'selected_option' not in st.session_state:
    st.session_state.selected_option = None
if 'answered_correctly' not in st.session_state:
    st.session_state.answered_correctly = None
if 'show_explanation' not in st.session_state:
    st.session_state.show_explanation = False
if 'quiz_finished' not in st.session_state:
    st.session_state.quiz_finished = False
if 'filtered_questions' not in st.session_state:
    st.session_state.filtered_questions = []
if 'num_questions_per_category' not in st.session_state:
    st.session_state.num_questions_per_category = 5 # 5 perguntas por categoria

# Novos estados para gerenciar o √≠ndice atual de cada pool embaralhado
# Estes √≠ndices controlam de onde as pr√≥ximas 5 perguntas ser√£o tiradas.
if 'current_index_neuroanatomy' not in st.session_state:
    st.session_state.current_index_neuroanatomy = 0
if 'current_index_neurophysiology' not in st.session_state:
    st.session_state.current_index_neurophysiology = 0

# --- Fun√ß√µes do Quiz ---

def get_next_questions_from_pool(pool_name, num_questions_needed):
    """
    Pega um certo n√∫mero de perguntas do pool especificado,
    avan√ßando o √≠ndice e reembaralhando o pool se necess√°rio.
    Retorna as perguntas selecionadas.
    """
    if pool_name == "Neuroanatomia":
        current_pool = _all_neuroanatomy_questions
        current_index_key = 'current_index_neuroanatomy'
    else: # Neurofisiologia
        current_pool = _all_neurophysiology_questions
        current_index_key = 'current_index_neurophysiology'

    start_index = st.session_state[current_index_key]
    end_index = start_index + num_questions_needed

    # Se o n√∫mero de perguntas necess√°rias exceder o que resta no pool,
    # reinicializa o pool (reembaralha e reseta o √≠ndice)
    if end_index > len(current_pool):
        st.sidebar.warning(f"Reinicializando banco de perguntas de {pool_name} para novas sequ√™ncias...")
        random.shuffle(current_pool) # Reembaralha o pool completo
        st.session_state[current_index_key] = 0 # Reseta o √≠ndice para o in√≠cio
        start_index = 0 # Reinicia a contagem para esta sele√ß√£o
        end_index = start_index + num_questions_needed

        # Se ainda assim o pool for muito pequeno (menos que o num_questions_needed)
        # pegamos o que sobrou. Isso n√£o deve acontecer com 70 perguntas e 5 necess√°rias,
        # mas √© uma garantia.
        if end_index > len(current_pool):
            end_index = len(current_pool)


    selected = current_pool[start_index:end_index]
    st.session_state[current_index_key] = end_index # Atualiza o √≠ndice para a pr√≥xima vez
    return selected

def start_quiz_callback(category_filter):
    """Callback para iniciar o quiz, filtrando e selecionando perguntas de forma n√£o repetitiva."""

    selected_questions = []
    num_to_select_per_cat = st.session_state.num_questions_per_category

    if category_filter == "Todas":
        selected_questions.extend(get_next_questions_from_pool("Neuroanatomia", num_to_select_per_cat))
        selected_questions.extend(get_next_questions_from_pool("Neurofisiologia", num_to_select_per_cat))
        random.shuffle(selected_questions) # Embaralha o resultado final para misturar as categorias

    else: # Se uma categoria espec√≠fica foi selecionada
        selected_questions.extend(get_next_questions_from_pool(category_filter, num_to_select_per_cat))
        random.shuffle(selected_questions) # Apenas embaralha

    st.session_state.filtered_questions = selected_questions
    st.session_state.quiz_started = True
    st.session_state.current_question_index = 0
    st.session_state.score = 0
    st.session_state.selected_option = None
    st.session_state.answered_correctly = None
    st.session_state.show_explanation = False
    st.session_state.quiz_finished = False

def next_question_callback():
    """Avan√ßa para a pr√≥xima pergunta."""
    st.session_state.current_question_index += 1
    st.session_state.selected_option = None
    st.session_state.answered_correctly = None
    st.session_state.show_explanation = False
    if st.session_state.current_question_index >= len(st.session_state.filtered_questions):
        st.session_state.quiz_finished = True

def restart_quiz_callback():
    """Reinicia o quiz."""
    st.session_state.quiz_started = False
    st.session_state.current_question_index = 0
    st.session_state.score = 0
    st.session_state.selected_option = None
    st.session_state.answered_correctly = None
    st.session_state.show_explanation = False
    st.session_state.quiz_finished = False
    st.session_state.filtered_questions = [] # Limpa as perguntas filtradas
    # N√£o zera os 'current_index_X' aqui, para que o pr√≥ximo quiz pegue as pr√≥ximas perguntas.


# --- Interface do Quiz ---

if not st.session_state.quiz_started:
    st.write("Escolha uma categoria para come√ßar o quiz. Ser√£o selecionadas 5 perguntas por categoria (se houver dispon√≠vel).")
    categories = ["Todas", "Neuroanatomia", "Neurofisiologia"]
    selected_category = st.selectbox("Selecione a Categoria:", categories, key="category_select")

    if st.button("Iniciar Quiz", on_click=lambda: start_quiz_callback(selected_category)):
        pass
else:
    if st.session_state.quiz_finished:
        total_questions = len(st.session_state.filtered_questions)
        percentage_correct = (st.session_state.score / total_questions) * 100 if total_questions > 0 else 0
        st.success(f"Quiz Conclu√≠do! Sua pontua√ß√£o final: {st.session_state.score} de {total_questions} ({percentage_correct:.2f}% de acerto)")

        # Bot√£o Reiniciar Quiz
        if st.button("Reiniciar Quiz", on_click=restart_quiz_callback):
            pass
    else:
        current_question = st.session_state.filtered_questions[st.session_state.current_question_index]

        st.subheader(f"Pergunta {st.session_state.current_question_index + 1}/{len(st.session_state.filtered_questions)}")
        st.markdown(f"**Categoria:** {current_question['category']}")
        st.write(current_question["question"])

        selected_option_key = f"q_{st.session_state.current_question_index}_option"

        options_disabled = st.session_state.selected_option is not None

        user_choice = st.radio(
            "Escolha uma op√ß√£o:",
            current_question["options"],
            key=selected_option_key,
            index=None,
            disabled=options_disabled
        )

        if user_choice and st.session_state.selected_option is None:
            st.session_state.selected_option = user_choice
            if user_choice == current_question["correct_answer"]:
                st.session_state.answered_correctly = True
                st.session_state.score += 1
            else:
                st.session_state.answered_correctly = False
            st.session_state.show_explanation = True

        if st.session_state.selected_option is not None:
            if st.session_state.answered_correctly:
                st.success("‚úÖ Resposta Correta!")
            else:
                st.error("‚ùå Resposta Incorreta.")
                st.write(f"A resposta correta era: **{current_question['correct_answer']}**")

            if st.session_state.show_explanation:
                st.info(f"**Explica√ß√£o:** {current_question['explanation']}")
                if current_question['reference']:
                    st.caption(f"**Refer√™ncia:** {current_question['reference']}")

            st.write("")

            if st.button("Pr√≥xima Pergunta", on_click=next_question_callback):
                pass

        st.markdown(f"---")
        st.write(f"**Pontua√ß√£o Atual:** {st.session_state.score} / {st.session_state.current_question_index + 1}")